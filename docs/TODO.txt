TODO
====

* Add criteria ordering support

* Form Sort Criteria
  =========
  
  TODO: Not implemented yet
  
  An widget is avialable for selecting which of the possible
  sort fields should be available for sorting on.  The InAndOutWidget is
  used so that the order can be specified.
  
      TODO >>> print browser.contents
      <...
      <div class="field ArchetypesInAndOutWidget
      kssattr-atfieldname-sortFields"
      id="archetypes-fieldname-sortFields">...
      ...>Relevance</option>...
      ...>Effective Date</option>...
  
  The InAndOutWidget uses JavaScript so we'll set the field manually for
  testing.
  
      TODO >>> self.login()
      TODO >>> foo_topic.setSortFields(['', 'effective', 'Type'])
  
      TODO >>> form = browser.getForm(name="criteria_select")
      TODO >>> form.getControl('Sort Order').selected = True
  
  Form sort criteria default to sorting on the "Relevance" field
  corresponds to a sort by weight for searches that include queries
  against indexs that support weighted results.
  
      TODO >>> form = browser.getForm(action="criterion_edit_form", index=0)
      TODO >>> form.getControl('Relevance').selected
      True

* Add AJAX search results refresh

* Add single selection (pulldown, radio) criteria (davisagli)

* Fix folder_contents view to support deleting, etc.

* Use subcollections to support AdvancedQuery operations

  Collections will act as grouping/parenthesis *and* operators.  IOW,
  a collection will have a boolean field to set whether it uses AND or
  OR to find the intersection or union of its result sets.
  Sub-collections will not acquire criteria but instead parent
  collections will treat sub-collections as criteria groupings.  Not
  yet sure how to handle sorting.
